# Local .terraform directories
.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
# *.tfvars
# *.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore MacOS system files
.DS_Store
# Ignore Python cache files
__pycache__/

# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*


# Optional: include package-lock.json in GitHub Actions for reproducible builds
# Uncomment the following line if you DO want to commit the lock file:
#!package-lock.json

# VS Code settings
.vscode/

# macOS
.DS_Store

# Logs
logs/
*.log
*.log.*

# Coverage & test output
coverage/
.nyc_output/
test-results/

# Semantic release artifacts (if any)
.release-it.json

# GitHub Actions
dist/
*.tgz

# Misc
.env
.env.local
.env.production
.env.test

# Devcontainer files
awscliv2.zip
LICENSE.txt
aws/*